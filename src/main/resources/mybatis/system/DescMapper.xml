<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.system.dao.DescDao">

	<select id="get" resultType="com.bootdo.system.domain.DescDO">
		select `id`,`proposer`,`email`,`project_name`,`type`,`user_name`,`sentry_id`,`ad_group`,`password`,`jiqun` from user_desc where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.system.domain.DescDO">
		select `id`,`proposer`,`email`,`project_name`,`type`,`user_name`,`sentry_id`,`ad_group`,`password`,`jiqun` from user_desc
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="proposer != null and proposer != ''"> and proposer = #{proposer} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		  <if test="projectName != null and projectName != ''"> and project_name = #{projectName} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="userName != null and userName != ''"> and user_name like concat(concat("%",#{userName}),"%") </if>
		  		  <if test="sentryId != null and sentryId != ''"> and sentry_id = #{sentryId} </if>
		  		  <if test="adGroup != null and adGroup != ''"> and ad_group = #{adGroup} </if>
		  		  <if test="password != null and password != ''"> and password = #{password} </if>
		  		  <if test="jiqun != null and jiqun != ''"> and jiqun = #{jiqun} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from user_desc
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="proposer != null and proposer != ''"> and proposer = #{proposer} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		  <if test="projectName != null and projectName != ''"> and project_name = #{projectName} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="userName != null and userName != ''"> and user_name like concat(concat("%",#{userName}),"%") </if>
		  		  <if test="sentryId != null and sentryId != ''"> and sentry_id = #{sentryId} </if>
		  		  <if test="adGroup != null and adGroup != ''"> and ad_group = #{adGroup} </if>
		  		  <if test="password != null and password != ''"> and password = #{password} </if>
		  		  <if test="jiqun != null and jiqun != ''"> and jiqun = #{jiqun} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.system.domain.DescDO" useGeneratedKeys="true" keyProperty="id">
		insert into user_desc
		(
			`proposer`, 
			`email`, 
			`project_name`, 
			`type`, 
			`user_name`, 
			`sentry_id`, 
			`ad_group`, 
			`password`, 
			`jiqun`
		)
		values
		(
			#{proposer}, 
			#{email}, 
			#{projectName}, 
			#{type}, 
			#{userName}, 
			#{sentryId}, 
			#{adGroup}, 
			#{password}, 
			#{jiqun}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.system.domain.DescDO">
		update user_desc 
		<set>
			<if test="proposer != null">`proposer` = #{proposer}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="projectName != null">`project_name` = #{projectName}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="userName != null">`user_name` = #{userName}, </if>
			<if test="sentryId != null">`sentry_id` = #{sentryId}, </if>
			<if test="adGroup != null">`ad_group` = #{adGroup}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="jiqun != null">`jiqun` = #{jiqun}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from user_desc where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from user_desc where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>